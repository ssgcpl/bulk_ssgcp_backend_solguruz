openapi: 3.0.3
info:
    title: 'SSGC Bulk Order'
    description: ''
    version: 1.0.0
servers:
    -
        url: 'https://phplaravel-1199381-4233939.cloudwaysapps.com'
paths:
    /api/customer/country_list:
        get:
            summary: 'Auth: Country List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Country List Found'
                                    data: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-bulk-order-web/public/flags/india.png' }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Country List Found' }
                                    data: { type: array, example: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-bulk-order-web/public/flags/india.png' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/signup:
        post:
            summary: 'Auth: Signup'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your email test123@mailinator.com'
                                    data: { id: '10', username: test1234, email: test123@mailinator.com, mobile_number: '1111111111', bio: test, link: 'https://www.mysite.com', favorite_book: test, favorite_genre: test, title: Author, title_id: '1', profile_image: 'http://cloud1.kodyinfotech.com:7000/redwriter/public/uploads/media/53534670e278f062511d0b522b6372f0.jpg', country: { id: '1', name: USA, code: '+1', flag: 'http://cloud1.kodyinfotech.com:7000/redwriter/public/flags/usa.png' }, state: { id: '1', country_id: '1', country_name: USA, name: California }, city: { id: '1', state_id: '1', state_name: California, name: 'Los Angeles' }, email_verified: '1', phone_verified: '1', is_social_login: normal, friends: '0', my_subscription: { id: '1', name: Black, type: Public, price: '100' } }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your email test123@mailinator.com' }
                                    data: { type: object, example: { id: '10', username: test1234, email: test123@mailinator.com, mobile_number: '1111111111', bio: test, link: 'https://www.mysite.com', favorite_book: test, favorite_genre: test, title: Author, title_id: '1', profile_image: 'http://cloud1.kodyinfotech.com:7000/redwriter/public/uploads/media/53534670e278f062511d0b522b6372f0.jpg', country: { id: '1', name: USA, code: '+1', flag: 'http://cloud1.kodyinfotech.com:7000/redwriter/public/flags/usa.png' }, state: { id: '1', country_id: '1', country_name: USA, name: California }, city: { id: '1', state_id: '1', state_name: California, name: 'Los Angeles' }, email_verified: '1', phone_verified: '1', is_social_login: normal, friends: '0', my_subscription: { id: '1', name: Black, type: Public, price: '100' } } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: 'Full name.'
                                    example: John
                                profile_image:
                                    type: string
                                    format: binary
                                    description: 'Profile Image.'
                                company_name:
                                    type: string
                                    description: 'Full name.'
                                    example: John
                                'company_images[]':
                                    type: string
                                    format: binary
                                    description: 'Company Images.'
                                'company_documents[]':
                                    type: string
                                    format: binary
                                    description: 'Company Documents.'
                                email:
                                    type: string
                                    description: 'optional max:190 Email.'
                                    example: John@gmail.com
                                mobile_number:
                                    type: string
                                    description: 'max:10  Mobile Number.'
                                    example: '1234567890'
                                password:
                                    type: string
                                    description: 'min:8 max:16  Password.'
                                    example: John@123
                                referral_code:
                                    type: string
                                    description: 'min:8 max:8  Referral Code.'
                                    example: SSGC1234
                                device_type:
                                    type: string
                                    description: 'User''s device type. Enums : iphone, android.'
                                    example: iphone
                                device_token:
                                    type: string
                                    description: 'User''s device token.'
                                    example: abcd1234
                            required:
                                - first_name
                                - profile_image
                                - company_name
                                - 'company_images[]'
                                - 'company_documents[]'
                                - mobile_number
                                - password
                                - referral_code
                                - device_type
                                - device_token
            security: []
    /api/customer/verify_otp:
        post:
            summary: 'Auth: Mobile OTP Verify'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Your Mobile number verified successfully'
                                    data: { token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMjA4NmYxODJjOGZjNmNlYzI0ZDdjYzQ3NzlmYjFjY2FmZjcwNGE2NWZjMmQxNmY1OTNmNjUyY2FkM2YzYjk0M2ViZDg3ZmRmZGIxZTMwMzYiLCJpYXQiOjE2N..., id: '9', first_name: John, last_name: '', email: John@gmail.com, mobile_number: '1234567890', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: 5X9PFTIR, email_verified: '0', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Your Mobile number verified successfully' }
                                    data: { type: object, example: { token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMjA4NmYxODJjOGZjNmNlYzI0ZDdjYzQ3NzlmYjFjY2FmZjcwNGE2NWZjMmQxNmY1OTNmNjUyY2FkM2YzYjk0M2ViZDg3ZmRmZGIxZTMwMzYiLCJpYXQiOjE2N..., id: '9', first_name: John, last_name: '', email: John@gmail.com, mobile_number: '1234567890', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: 5X9PFTIR, email_verified: '0', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                otp:
                                    type: string
                                    description: 'max:6  OTP.'
                                    example: '123456'
                                user_id:
                                    type: string
                                    description: 'User ID.'
                                    example: '1'
                                mobile_number:
                                    type: string
                                    description: 'max:10  Mobile Number.'
                                    example: '1234567890'
                            required:
                                - otp
                                - user_id
                                - mobile_number
            security: []
    /api/customer/resend_otp:
        post:
            summary: 'Auth: Resend OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your mobile number 9727332489'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your mobile number 9727332489' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: 'User ID.'
                                    example: '1'
                                mobile_number:
                                    type: string
                                    description: 'max:10  Mobile Number.'
                                    example: '123456789'
                            required:
                                - user_id
                                - mobile_number
            security: []
    /api/customer/verify_email_otp:
        post:
            summary: 'Auth: Verify Email OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Your email has been verified successfully'
                                    data: { token: eyJ0eXAiOiJKV1QiL..., id: '148', first_name: John, last_name: '', email: aaawwwsss@mailinator.com, mobile_number: '1234567804', profile_image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582359196.png', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-bulk-order-web/public/flags/india.png' }, referral_code: '', email_verified: '1', phone_verified: '0', is_social_login: normal, company_name: John, company_documents: [{ id: '1196', document: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582353154.png' }], company_images: [{ id: '1195', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582357164.png' }], user_type: retailer }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Your email has been verified successfully' }
                                    data: { type: object, example: { token: eyJ0eXAiOiJKV1QiL..., id: '148', first_name: John, last_name: '', email: aaawwwsss@mailinator.com, mobile_number: '1234567804', profile_image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582359196.png', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-bulk-order-web/public/flags/india.png' }, referral_code: '', email_verified: '1', phone_verified: '0', is_social_login: normal, company_name: John, company_documents: [{ id: '1196', document: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582353154.png' }], company_images: [{ id: '1195', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582357164.png' }], user_type: retailer } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                otp:
                                    type: string
                                    description: 'max:6  OTP.'
                                    example: '1234'
                                user_id:
                                    type: string
                                    description: 'User ID.'
                                    example: '1'
                                email:
                                    type: string
                                    description: Email.
                                    example: test@mail.com
                            required:
                                - otp
                                - user_id
                                - email
            security: []
    /api/customer/resend_email_otp:
        post:
            summary: 'Auth: Resend Email OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your email ttt123@mailinator.com'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your email ttt123@mailinator.com' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: 'User ID.'
                                    example: '1'
                                email:
                                    type: string
                                    description: Email.
                                    example: test@mail.com
                            required:
                                - user_id
                                - email
            security: []
    /api/customer/login_with_otp:
        post:
            summary: 'Auth: Login with OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Your Mobile number verified successfully'
                                    data: { token: eyJ0eXAiOiJKV1QiLCJ..., id: '1', first_name: Parth, last_name: Patel, email: parth.patel@kodytechnolab.com, mobile_number: '972733248', age: '25', profile_image: 'http://localhost/beauty-fly/public/images/customer_avtar.png', country: { id: '1', name: 'Saudi Arabia', code: '+966', flag: 'http://localhost/beauty-fly/public/flags/saudi_arebia.png' }, latitude: '', longitude: '', email_verified: '0', phone_verified: '1', is_social_login: '0' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Your Mobile number verified successfully' }
                                    data: { type: object, example: { token: eyJ0eXAiOiJKV1QiLCJ..., id: '1', first_name: Parth, last_name: Patel, email: parth.patel@kodytechnolab.com, mobile_number: '972733248', age: '25', profile_image: 'http://localhost/beauty-fly/public/images/customer_avtar.png', country: { id: '1', name: 'Saudi Arabia', code: '+966', flag: 'http://localhost/beauty-fly/public/flags/saudi_arebia.png' }, latitude: '', longitude: '', email_verified: '0', phone_verified: '1', is_social_login: '0' } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mobile_number:
                                    type: string
                                    description: 'max:10  Mobile Number.'
                                    example: '123456789'
                                device_type:
                                    type: string
                                    description: 'optional User''s device type. Enums : iphone, android.'
                                    example: iphone
                                device_token:
                                    type: string
                                    description: 'optional User''s device token.'
                                    example: abcd1234
                            required:
                                - mobile_number
            security: []
    /api/customer/login_with_password:
        post:
            summary: 'Auth: Login with password (email / mobile)'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'User logged in successfully.'
                                    data: { token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZDI3MDg1NTBhNjZkZjc5ZTQwZmI4MWQ0...., id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'User logged in successfully.' }
                                    data: { type: object, example: { token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZDI3MDg1NTBhNjZkZjc5ZTQwZmI4MWQ0...., id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'optional Email(required without mobile number).'
                                    example: john@mail.com
                                mobile_number:
                                    type: string
                                    description: 'optional  max:10  Mobile Number(required without email).'
                                    example: '123456789'
                                password:
                                    type: string
                                    description: 'min:8 max:16  Password.'
                                    example: '12345678'
                                device_type:
                                    type: string
                                    description: 'optional User''s device type. Enums : iphone, android.'
                                    example: iphone
                                device_token:
                                    type: string
                                    description: 'optional User''s device token.'
                                    example: abcd1234
                            required:
                                - password
            security: []
    /api/customer/forgot_password:
        post:
            summary: 'Auth: Forgot Password'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your mobile number 1112223331'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your mobile number 1112223331' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                send_in:
                                    type: string
                                    description: 'send in (values: mobile, email).'
                                    example: mobile
                                email:
                                    type: string
                                    description: 'optional Email (required if send in email).'
                                    example: test@mail.com
                                mobile_number:
                                    type: string
                                    description: 'optional  max:10  Mobile Number  (required if send in mobile).'
                                    example: '123456789'
                            required:
                                - send_in
            security: []
    /api/customer/forgot_password_verify_otp:
        post:
            summary: 'Auth: Forgot Password Verify OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP has been verified successfully.'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP has been verified successfully.' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mobile_number:
                                    type: string
                                    description: 'optional  max:10  Mobile Number(required if send in mobile).'
                                    example: '123456789'
                                otp:
                                    type: string
                                    description: OTP.
                                    example: '1234'
                            required:
                                - otp
            security: []
    /api/customer/forgot_password_resend_otp:
        post:
            summary: 'Auth: Forgot Password Resend OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your mobile number 9727332489'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your mobile number 9727332489' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mobile_number:
                                    type: string
                                    description: 'optional  max:10  Mobile Number(required if send in mobile).'
                                    example: '123456789'
            security: []
    /api/customer/reset_password:
        post:
            summary: 'Auth: Reset Password'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Password Reset successfully.'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Password Reset successfully.' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                otp:
                                    type: string
                                    description: OTP.
                                    example: '1234'
                                mobile_number:
                                    type: optional
                                    description: 'max:10  Mobile NumberExample:123456789'
                                    example: eius
                                password:
                                    type: string
                                    description: Password.
                                    example: '12345678'
                                confirm_password:
                                    type: string
                                    description: 'Confirm Password.'
                                    example: '12345678'
                            required:
                                - otp
                                - password
                                - confirm_password
            security: []
    /api/customer/states:
        get:
            summary: 'Master: States'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Country List Found'
                                    data: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Country List Found' }
                                    data: { type: array, example: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            security: []
    '/api/customer/cities/{state_id}':
        get:
            summary: 'Master: Cities'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Country List Found'
                                    data: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Country List Found' }
                                    data: { type: array, example: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            security: []
        parameters:
            -
                in: path
                name: state_id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: voluptas
    '/api/customer/postcodes/{city_id}':
        get:
            summary: 'Master: Postcodes'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Country List Found'
                                    data: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Country List Found' }
                                    data: { type: array, example: [{ id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            security: []
        parameters:
            -
                in: path
                name: city_id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: iure
    /api/customer/cms:
        get:
            summary: 'Hamburger Menu: CMS'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'CMS Pages'
                                    data: { terms_page_url: 'http://localhost/ssgc-web/public/api/customer/terms_and_conditions', about_us: 'http://localhost/ssgc-web/public/api/customer/about_us', privacy_policy: 'http://localhost/ssgc-web/public/api/customer/privacy_policy' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'CMS Pages' }
                                    data: { type: object, example: { terms_page_url: 'http://localhost/ssgc-web/public/api/customer/terms_and_conditions', about_us: 'http://localhost/ssgc-web/public/api/customer/about_us', privacy_policy: 'http://localhost/ssgc-web/public/api/customer/privacy_policy' } }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/refer_and_earn:
        get:
            summary: 'Hamburger Menu: Refer & Earn'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data found'
                                    data: { referaal_code: '12345678', title: 'You Will Get 1000 Points On Your First Referral', content: 'This is content for Refer and Earn, Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet.' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data found' }
                                    data: { type: object, example: { referaal_code: '12345678', title: 'You Will Get 1000 Points On Your First Referral', content: 'This is content for Refer and Earn, Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet. Lorem ipsum dollar sit amet.' } }
            tags:
                - 'Customer Endpoints'
    /api/customer/books_list:
        get:
            summary: 'Books: Book list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                business_category_id:
                                    type: numeric
                                    description: 'from id from business_categories API'
                                    example: '1'
                                language:
                                    type: string
                                    description: 'Language (hindi,english).'
                                    example: hindi
                                category_id:
                                    type: string
                                    description: 'optional Category_id (category_id or subcategory_id of any level).'
                                    example: '3'
                                user_id:
                                    type: numeric
                                    description: 'optional User id if logged in API'
                                    example: '1'
                            required:
                                - business_category_id
                                - language
            security: []
    /api/customer/book_details:
        post:
            summary: 'Books: Book Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                book_id:
                                    type: string
                                    description: 'Book Id.'
                                    example: '1'
                                user_id:
                                    type: numeric
                                    description: 'optional User id if logged in API'
                                    example: '1'
                                language:
                                    type: string
                                    description: 'Language (hindi,english).'
                                    example: hindi
                            required:
                                - book_id
                                - language
    /api/customer/home/home_search:
        post:
            summary: 'Home: Search'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: 'search type enum:books,coupons'
                                    example: books
                                search_string:
                                    type: string
                                    description: 'search data'
                                    example: 'lorem ipsum'
                            required:
                                - type
                                - search_string
            security: []
    /api/customer/home/trending_book_list:
        get:
            summary: 'Home: Trending Books List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/home/business_category_section_data:
        get:
            summary: 'Home: Business Category Sections Data'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/reason_list:
        get:
            summary: 'Customer Support: Reasons'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Reason data found'
                                    data: [{ id: '2', reason: 'Need help for How to do payment' }, { id: '4', reason: 'I Need help for How to do payment' }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Reason data found' }
                                    data: { type: array, example: [{ id: '2', reason: 'Need help for How to do payment' }, { id: '4', reason: 'I Need help for How to do payment' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
    /api/customer/send_ticket:
        post:
            summary: 'Customer Support: Send ticket'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Enquiry has been submitted successfully.'
                                    data: { ticket_number: '2', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Enquiry has been submitted successfully.' }
                                    data: { type: object, example: { ticket_number: '2', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                reason_id:
                                    type: integer
                                    description: ''
                                    example: 19
                                full_name:
                                    type: string
                                    description: 'max:500'
                                    example: velit
                                email:
                                    type: email
                                    description: 'max:500'
                                    example: id
                                mobile_number:
                                    type: string
                                    description: 'Contact number.'
                                    example: '1231231231'
                                message:
                                    type: string
                                    description: 'max:500'
                                    example: voluptates
                            required:
                                - reason_id
                                - full_name
                                - email
                                - mobile_number
                                - message
    /api/customer/logout:
        post:
            summary: 'Auth: Logout'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'You have logged-out successfully'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'You have logged-out successfully' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                device_token:
                                    type: string
                                    description: 'optional User''s device token.'
                                    example: abcd1234
    /api/customer/update_device_token:
        post:
            summary: 'Auth: Update Device Token'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Device details updated.'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Device details updated.' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                device_type:
                                    type: string
                                    description: 'User''s device type. Enums : iphone, android.'
                                    example: iphone
                                device_token:
                                    type: string
                                    description: 'User''s device token.'
                                    example: abcd1234
                            required:
                                - device_type
                                - device_token
    /api/customer/profile:
        get:
            summary: 'Profile: Profile Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'My Profile'
                                    data: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'My Profile' }
                                    data: { type: object, example: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
    /api/customer/profile/update_personal_details:
        post:
            summary: 'Profile: Update Personal Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Profile details has been updated successfully'
                                    data: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Profile details has been updated successfully' }
                                    data: { type: object, example: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: 'max:50  First Name.'
                                    example: John
                                last_name:
                                    type: string
                                    description: 'optional max:50  Last Name.'
                                    example: John
                                company_name:
                                    type: string
                                    description: 'Full name.'
                                    example: John
                            required:
                                - first_name
                                - company_name
    /api/customer/profile/update_image:
        post:
            summary: 'Profile: Update Profile Image'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Profile details has been updated successfully'
                                    data: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Profile details has been updated successfully' }
                                    data: { type: object, example: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                profile_image:
                                    type: string
                                    format: binary
                                    description: 'The image.'
                            required:
                                - profile_image
    /api/customer/profile/update_company_images:
        post:
            summary: 'Profile: Update Company Docs & Images'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Profile details has been updated successfully'
                                    data: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Profile details has been updated successfully' }
                                    data: { type: object, example: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                'company_images[]':
                                    type: string
                                    format: binary
                                    description: 'Company Images.'
                                'company_documents[]':
                                    type: string
                                    format: binary
                                    description: 'Company Documents.'
                            required:
                                - 'company_images[]'
                                - 'company_documents[]'
    /api/customer/profile/update/mobile:
        post:
            summary: 'Profile: Update Mobile Number'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your mobile number 1112223332'
                                    data: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your mobile number 1112223332' }
                                    data: { type: object, example: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mobile_number:
                                    type: string
                                    description: 'max:10  Mobile Number.'
                                    example: '1234567890'
                            required:
                                - mobile_number
    /api/customer/profile/verify/mobile:
        post:
            summary: 'Profile: Verify Mobile Number'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Your mobile number has been updated successfully'
                                    data: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Your mobile number has been updated successfully' }
                                    data: { type: object, example: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mobile_number:
                                    type: string
                                    description: 'max:10  Mobile Number.'
                                    example: '123456789'
                                otp:
                                    type: string
                                    description: 'max:4  OTP.'
                                    example: '1234'
                            required:
                                - mobile_number
                                - otp
    /api/customer/profile/update/email:
        post:
            summary: 'Profile: Update Email Address'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your email testmmm1@mailinator.com'
                                    data: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your email testmmm1@mailinator.com' }
                                    data: { type: object, example: { id: '10', first_name: test, last_name: '', email: tesssttt@mailinator.com, mobile_number: '1112223331', profile_image: 'http://localhost/ssgc-web/public/customer_avtar.jpg', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-web/public/flags/india.png' }, referral_code: NRSW80WZ, email_verified: '1', phone_verified: '1', is_social_login: normal } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'optional max:190  Email.'
                                    example: John@gmail.com
    /api/customer/profile/verify/email:
        post:
            summary: 'Profile: Verify Email Address'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Your email has been updated successfully'
                                    data: { id: '148', first_name: John, last_name: '', email: testttwww@mailinator.com, mobile_number: '1234567804', profile_image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582359196.png', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-bulk-order-web/public/flags/india.png' }, referral_code: '', email_verified: '1', phone_verified: '0', is_social_login: normal, company_name: John, company_documents: [{ id: '1196', document: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582353154.png' }], company_images: [{ id: '1195', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582357164.png' }], user_type: retailer }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Your email has been updated successfully' }
                                    data: { type: object, example: { id: '148', first_name: John, last_name: '', email: testttwww@mailinator.com, mobile_number: '1234567804', profile_image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582359196.png', country: { id: '1', name: India, code: '+91', flag: 'http://localhost/ssgc-bulk-order-web/public/flags/india.png' }, referral_code: '', email_verified: '1', phone_verified: '0', is_social_login: normal, company_name: John, company_documents: [{ id: '1196', document: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582353154.png' }], company_images: [{ id: '1195', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/Consumer_Woman-512_-_Copy_16811582357164.png' }], user_type: retailer } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                otp:
                                    type: string
                                    description: 'max:6  OTP.'
                                    example: '1234'
                                email:
                                    type: string
                                    description: Email.
                                    example: test@mail.com
                            required:
                                - otp
                                - email
    /api/customer/profile/resend_mobile_otp:
        post:
            summary: 'Profile: Resend Mobile  OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your mobile number 1112223331'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your mobile number 1112223331' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mobile_number:
                                    type: string
                                    description: 'min:10 max:10  Mobile Number.'
                                    example: '123456789'
                            required:
                                - mobile_number
    /api/customer/profile/resend_email_otp:
        post:
            summary: 'Profile: Resend Email  OTP'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'OTP sent to your email ttt123@mailinator.com'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'OTP sent to your email ttt123@mailinator.com' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: Email.
                                    example: test@mail.com
                            required:
                                - email
    /api/customer/profile/earn_accounts:
        post:
            summary: 'Profile: Earn Accounts'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { balance_points: '0', data: [{ type: 'Welcome Points', date: '01 Jul, 2022', points: '10' }, { type: 'Redeem Points', date: '01 Jul, 2022', points: '-10' }] }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { balance_points: '0', data: [{ type: 'Welcome Points', date: '01 Jul, 2022', points: '10' }, { type: 'Redeem Points', date: '01 Jul, 2022', points: '-10' }] } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: 'history,earn,redeem'
                                    example: id
                            required:
                                - type
    /api/customer/change_password:
        post:
            summary: 'Profile: Change Password'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Password updated successfully'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Password updated successfully' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                old_password:
                                    type: string
                                    description: 'Old Password.'
                                    example: '12345678'
                                new_password:
                                    type: string
                                    description: 'New Password.'
                                    example: '12345678'
                                confirm_password:
                                    type: string
                                    description: 'Confirm Password.'
                                    example: '12345678'
                            required:
                                - old_password
                                - new_password
                                - confirm_password
    /api/customer/addresses:
        get:
            summary: 'Addresses : Address List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Address List'
                                    data: [{ id: '2', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: satellite, house_no: '20', street: test, landmark: test, address_type: Home }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Address List' }
                                    data: { type: array, example: [{ id: '2', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: satellite, house_no: '20', street: test, landmark: test, address_type: Home }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
    /api/customer/address/add:
        post:
            summary: 'Addresses : Add Address'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Address has been added successfully'
                                    data: [{ id: '2', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: satellite, house_no: '20', street: test, landmark: test, address_type: Home }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Address has been added successfully' }
                                    data: { type: array, example: [{ id: '2', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: satellite, house_no: '20', street: test, landmark: test, address_type: Home }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                contact_name:
                                    type: string
                                    description: 'Contact name.'
                                    example: test
                                company_name:
                                    type: string
                                    description: 'Company name.'
                                    example: test
                                contact_number:
                                    type: string
                                    description: 'Contact number.'
                                    example: '1231231231'
                                email:
                                    type: string
                                    description: Email.
                                    example: test@mail.com
                                state_id:
                                    type: string
                                    description: 'State id.'
                                    example: Gujarat
                                state:
                                    type: string
                                    description: ''
                                    example: rerum
                                city_id:
                                    type: string
                                    description: 'City id.'
                                    example: '1'
                                city:
                                    type: string
                                    description: ''
                                    example: maiores
                                postcode_id:
                                    type: string
                                    description: 'PostCode id.'
                                    example: '1'
                                postcode:
                                    type: string
                                    description: ''
                                    example: dolor
                                area:
                                    type: string
                                    description: Area.
                                    example: test
                                house_no:
                                    type: string
                                    description: 'House / Street No.'
                                    example: '11'
                                street:
                                    type: string
                                    description: Street.
                                    example: xxx
                                landmark:
                                    type: string
                                    description: Landmark.
                                    example: xxx
                                address_type:
                                    type: string
                                    description: 'Address Type(Home,Office,Other).'
                                    example: Home
                                is_delivery_address:
                                    type: string
                                    description: 'Is Delivery Address (Default Address) Enum(yes,no).'
                                    example: 'yes'
                            required:
                                - contact_name
                                - company_name
                                - contact_number
                                - email
                                - area
                                - house_no
                                - street
                                - landmark
                                - address_type
                                - is_delivery_address
    /api/customer/address/edit:
        post:
            summary: 'Addresses : Edit Address'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Address Details'
                                    data: { id: '1', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: satellite, house_no: '20', street: test, landmark: test, address_type: Home }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Address Details' }
                                    data: { type: object, example: { id: '1', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: satellite, house_no: '20', street: test, landmark: test, address_type: Home } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                address_id:
                                    type: string
                                    description: 'Address ID.'
                                    example: '1'
                            required:
                                - address_id
    /api/customer/address/update:
        post:
            summary: 'Addresses : Update Address'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Address has been updated successfully'
                                    data: [{ id: '1', contact_name: sssss, contact_number: '2222222222', state_id: '2', state_name: Gujarat, city_id: '3', city_name: Ahmedabad, postcode_id: '3', postcode: '380026', area: Bandra, house_no: '40', street: khaugali, landmark: 'Taj Hotel', address_type: Home }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Address has been updated successfully' }
                                    data: { type: array, example: [{ id: '1', contact_name: sssss, contact_number: '2222222222', state_id: '2', state_name: Gujarat, city_id: '3', city_name: Ahmedabad, postcode_id: '3', postcode: '380026', area: Bandra, house_no: '40', street: khaugali, landmark: 'Taj Hotel', address_type: Home }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                address_id:
                                    type: string
                                    description: 'Address ID.'
                                    example: '1'
                                contact_name:
                                    type: string
                                    description: 'Contact name.'
                                    example: test
                                company_name:
                                    type: string
                                    description: 'Company name.'
                                    example: test
                                contact_number:
                                    type: string
                                    description: 'Contact number.'
                                    example: '1231231231'
                                email:
                                    type: string
                                    description: Email.
                                    example: test@mail.com
                                state_id:
                                    type: string
                                    description: 'State id.'
                                    example: Gujarat
                                state:
                                    type: string
                                    description: ''
                                    example: deserunt
                                city_id:
                                    type: string
                                    description: 'City id.'
                                    example: '1'
                                city:
                                    type: string
                                    description: ''
                                    example: quia
                                postcode_id:
                                    type: string
                                    description: 'PostCode id.'
                                    example: '1'
                                postcode:
                                    type: string
                                    description: ''
                                    example: voluptates
                                area:
                                    type: string
                                    description: Area.
                                    example: test
                                house_no:
                                    type: string
                                    description: 'House / Street No.'
                                    example: '11'
                                street:
                                    type: string
                                    description: Street.
                                    example: xxx
                                landmark:
                                    type: string
                                    description: Landmark.
                                    example: xxx
                                address_type:
                                    type: string
                                    description: 'Address Type(Home,Office,Other).'
                                    example: Home
                                is_delivery_address:
                                    type: string
                                    description: 'Is Delivery Address (Default Address) Enum(yes,no).'
                                    example: 'yes'
                            required:
                                - address_id
                                - contact_name
                                - company_name
                                - contact_number
                                - email
                                - area
                                - house_no
                                - street
                                - landmark
                                - address_type
                                - is_delivery_address
    /api/customer/address/delete:
        post:
            summary: 'Addresses : Delete Address'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Address has been deleted successfully'
                                    data: [{ id: '4', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: Amraiwadi, house_no: '20', street: test, landmark: ssasa, address_type: Home }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Address has been deleted successfully' }
                                    data: { type: array, example: [{ id: '4', contact_name: test, contact_number: '1111112222', state_id: '1', state_name: Gujarat, city_id: '1', city_name: Ahmedabad, postcode_id: '1', postcode: '380026', area: Amraiwadi, house_no: '20', street: test, landmark: ssasa, address_type: Home }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                address_id:
                                    type: string
                                    description: 'Address ID.'
                                    example: '1'
                            required:
                                - address_id
    /api/customer/ticket_list:
        get:
            summary: 'Customer Support: List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Ticket List found'
                                    data: [{ ticket_number: '2', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending }, { ticket_number: '1', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending }]
                                    links: { first: 'http://localhost/beauty-fly/public/api/customer/ticket_list?page=1', last: 'http://localhost/beauty-fly/public/api/customer/ticket_list?page=1', prev: '', next: '' }
                                    meta: { current_page: 1, last_page: 1, per_page: 15, total: 2 }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Ticket List found' }
                                    data: { type: array, example: [{ ticket_number: '2', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending }, { ticket_number: '1', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/beauty-fly/public/api/customer/ticket_list?page=1', last: 'http://localhost/beauty-fly/public/api/customer/ticket_list?page=1', prev: '', next: '' } }
                                    meta: { type: object, example: { current_page: 1, last_page: 1, per_page: 15, total: 2 } }
            tags:
                - 'Customer Endpoints'
    '/api/customer/ticket/{id}':
        get:
            summary: 'Customer Support: Ticket details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { ticket_number: '2', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { ticket_number: '2', date: 22-03-2022, time: '11:09 AM', admin_comment: '', reason: { id: '2', reason: 'Need help for How to do payment' }, message: 'wifi not working in mobile application', status: Pending, status_original: pending } }
            tags:
                - 'Customer Endpoints'
        parameters:
            -
                in: path
                name: id
                description: ''
                example: autem
                required: true
                schema:
                    type: string
    /api/customer/notification_list:
        get:
            summary: 'Notifications: List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Cart data\",\n\"data\": [\n{\n\"id\": \"9\",\n},\n{\n\"id\": \"9\",\n},\n{\n\"id\": \"9\",\n},\n]\n}"
            tags:
                - 'Customer Endpoints'
    /api/customer/delete_notification:
        post:
            summary: 'Notifications: Delete Notification'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Notification deleted\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: number
                                    description: ''
                                    example: 1953.0
    /api/customer/clear_all_notifications:
        get:
            summary: 'Notifications: Clear all Notifications'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'All notifications have been cleared successfully.'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'All notifications have been cleared successfully.' }
            tags:
                - 'Customer Endpoints'
    /api/customer/notification_count:
        get:
            summary: 'Notifications: Unread Count'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Cart data\",\n\"data\": {\n\"count\": \"9\",\n}\n}"
            tags:
                - 'Customer Endpoints'
    /api/customer/books/add_to_cart:
        post:
            summary: 'Cart & Checkout: Add To Cart'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Item has been added to cart\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                book_id:
                                    type: number
                                    description: ''
                                    example: 865547.62121035
                                quantity:
                                    type: number
                                    description: ''
                                    example: 7618.49
                                language:
                                    type: string
                                    description: ''
                                    example: corrupti
                            required:
                                - book_id
                                - quantity
    /api/customer/books/update_quantity:
        post:
            summary: 'Cart & Checkout: Update Quantity'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Quantity updated successfully\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                cart_item_id:
                                    type: number
                                    description: ''
                                    example: 15065533.032888
                                quantity:
                                    type: number
                                    description: ''
                                    example: 4951756.9954938
                            required:
                                - cart_item_id
                                - quantity
    /api/customer/books/my_cart:
        get:
            summary: 'Cart & Checkout: My Cart'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Cart data'
                                    data: { cart_id: '8', items: [{ cart_item_id: '9', quantity: '1', item_id: '10', heading: 'Highcourt 2022', mrp: '600.00', sale_price: '500.00', cover_image: 'http://localhost/ssgc/public/uploads/media/a320ca76bf2eff0eb009566da69212c6.png', rating: '0.0', coupon_id: '1', qr_code: qwqwqqw, is_favorite: '0' }, { cart_item_id: '10', quantity: '1', item_id: '9', heading: 'Test Book Physical Ebbboknow', mrp: '400.00', sale_price: '300.00', cover_image: 'http://localhost/ssgc/public/uploads/media/bd47379207043595463a3e2af9b6dd8f.png', rating: '0.0', coupon_id: '1', qr_code: qwqwqqw, is_favorite: '0' }], earned_points: '0', points_formula: '10 coins = 1 Rs.', order_summary: { total_mrp: '1800.00', discount_on_sale: '450.00', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '1390.00' }, address_required: '1', payment_methods: [payu, ccavenue, cod], points_redeemed: '1' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Cart data' }
                                    data: { type: object, example: { cart_id: '8', items: [{ cart_item_id: '9', quantity: '1', item_id: '10', heading: 'Highcourt 2022', mrp: '600.00', sale_price: '500.00', cover_image: 'http://localhost/ssgc/public/uploads/media/a320ca76bf2eff0eb009566da69212c6.png', rating: '0.0', coupon_id: '1', qr_code: qwqwqqw, is_favorite: '0' }, { cart_item_id: '10', quantity: '1', item_id: '9', heading: 'Test Book Physical Ebbboknow', mrp: '400.00', sale_price: '300.00', cover_image: 'http://localhost/ssgc/public/uploads/media/bd47379207043595463a3e2af9b6dd8f.png', rating: '0.0', coupon_id: '1', qr_code: qwqwqqw, is_favorite: '0' }], earned_points: '0', points_formula: '10 coins = 1 Rs.', order_summary: { total_mrp: '1800.00', discount_on_sale: '450.00', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '1390.00' }, address_required: '1', payment_methods: [payu, ccavenue, cod], points_redeemed: '1' } }
            tags:
                - 'Customer Endpoints'
    /api/customer/books/update_cart_summary:
        post:
            summary: 'Cart & Checkout: Update Cart Summary'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                checkout_items:
                                    type: array
                                    description: 'array of cart_item_id from Cart & Checkout: My Cart'
                                    example: '[1,2]'
                            required:
                                - checkout_items
    /api/customer/books/checkout:
        post:
            summary: 'Cart & Checkout: Checkout'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                billing_address_id:
                                    type: number
                                    description: ''
                                    example: 264715.6
                                shipping_address_id:
                                    type: number
                                    description: ''
                                    example: 2881177.0
                                payment_method:
                                    type: string
                                    description: ''
                                    example: quia
                                checkout_items:
                                    type: array
                                    description: 'array of cart_item_id from Cart & Checkout: My Cart'
                                    example: '[1,2]'
                            required:
                                - payment_method
                                - checkout_items
    /api/customer/books/dealer_checkout:
        post:
            summary: 'Cart & Checkout: Checkout for dealer'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                billing_address_id:
                                    type: number
                                    description: ''
                                    example: 0.0
                                shipping_address_id:
                                    type: number
                                    description: ''
                                    example: 21154.054793
                                checkout_items:
                                    type: array
                                    description: 'array of cart_item_id from Cart & Checkout: My Cart'
                                    example: '[1,2]'
                            required:
                                - checkout_items
    /api/customer/books/my_cart_item_count:
        get:
            summary: 'Cart Item Count'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { cart_item_count: '1' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { cart_item_count: '1' } }
            tags:
                - 'Customer Endpoints'
    /api/customer/coupon/add_to_cart:
        post:
            summary: 'Coupon Cart & Checkout: Add To Cart'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Item has been added to cart\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                coupon_id:
                                    type: number
                                    description: ''
                                    example: 160.36650462
                                quantity:
                                    type: number
                                    description: ''
                                    example: 77746.0
                            required:
                                - coupon_id
                                - quantity
    '/api/customer/redeemed_points/{operation}':
        get:
            summary: 'Coupon Cart & Checkout: Redeemed Points : apply/remove'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Cart updated\",\n}"
            tags:
                - 'Customer Endpoints'
        parameters:
            -
                in: path
                name: operation
                description: ''
                example: fugit
                required: true
                schema:
                    type: string
    /api/customer/coupon/checkout:
        post:
            summary: 'Coupon Cart & Checkout: Checkout'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { url: 'http://localhost/ssgc/public/order_payment/5/1/payu' } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                payment_method:
                                    type: string
                                    description: ''
                                    example: labore
                            required:
                                - payment_method
    /api/customer/markOrderFailed:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/my_orders:
        post:
            summary: 'My Orders: My Orders'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: [{ id: '8', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '04 Jul 2022' }, { id: '14', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '05 Jul 2022' }]
                                    links: { first: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', last: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', prev: '', next: '' }
                                    meta: { current_page: 1, last_page: 1, per_page: 15, total: 5 }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: array, example: [{ id: '8', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '04 Jul 2022' }, { id: '14', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '05 Jul 2022' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', last: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', prev: '', next: '' } }
                                    meta: { type: object, example: { current_page: 1, last_page: 1, per_page: 15, total: 5 } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: 'Order Type (Enums : upcoming, past)'
                                    example: quisquam
                                order_status:
                                    type: array
                                    description: 'Order Status (Enums : on_hold,pending_payment,processing,shipped,completed,cancelled,refunded)'
                                    example: beatae
                            required:
                                - type
    '/api/customer/order_detail/{order_id}':
        get:
            summary: 'My Orders: Order Detail'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { order_id: '2', order_display: '', order_date: '07 Jul 2022', order_time: '10:15 AM', order_total: '116.50', order_status: Placed, delivery_address: { id: '60', contact_name: 'Parth House', contact_number: '1231231235', state_id: '2', state_name: Maharashtra, city_id: '3', city_name: Mumbai, postcode_id: '5', postcode: '380020', area: 'Parth House', house_no: '153', street: 'Parth House', landmark: 'Parth House landmark', address_type: Home, is_delivery_address: 'no' }, items: [{ order_item_id: '6', quantity: '1', item_id: '5', item_type: books, heading: Test5, mrp: '100.00', sale_price: '90.00', cover_image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/386d1968e9850353b0f2a3a40b3ae716.png', rating: '0.0' }], order_summary: { total_mrp: '100.00', discount_on_sale: '23.50', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '116.50' } }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { order_id: '2', order_display: '', order_date: '07 Jul 2022', order_time: '10:15 AM', order_total: '116.50', order_status: Placed, delivery_address: { id: '60', contact_name: 'Parth House', contact_number: '1231231235', state_id: '2', state_name: Maharashtra, city_id: '3', city_name: Mumbai, postcode_id: '5', postcode: '380020', area: 'Parth House', house_no: '153', street: 'Parth House', landmark: 'Parth House landmark', address_type: Home, is_delivery_address: 'no' }, items: [{ order_item_id: '6', quantity: '1', item_id: '5', item_type: books, heading: Test5, mrp: '100.00', sale_price: '90.00', cover_image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/386d1968e9850353b0f2a3a40b3ae716.png', rating: '0.0' }], order_summary: { total_mrp: '100.00', discount_on_sale: '23.50', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '116.50' } } }
            tags:
                - 'Customer Endpoints'
        parameters:
            -
                in: path
                name: order_id
                description: ''
                example: aliquid
                required: true
                schema:
                    type: string
    '/api/customer/order_item_details/{order_item_id}':
        get:
            summary: 'My Orders: Order Item Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { order_id: '2', order_display: '', order_date: '07 Jul 2022', order_time: '10:15 AM', order_total: '116.50', order_status: Placed, delivery_address: { id: '60', contact_name: 'Parth House', contact_number: '1231231235', state_id: '2', state_name: Maharashtra, city_id: '3', city_name: Mumbai, postcode_id: '5', postcode: '380020', area: 'Parth House', house_no: '153', street: 'Parth House', landmark: 'Parth House landmark', address_type: Home, is_delivery_address: 'no' }, items: [{ order_item_id: '6', quantity: '1', item_id: '5', item_type: books, heading: Test5, mrp: '100.00', sale_price: '90.00', cover_image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/386d1968e9850353b0f2a3a40b3ae716.png', rating: '0.0' }], order_summary: { total_mrp: '100.00', discount_on_sale: '23.50', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '116.50' } }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { order_id: '2', order_display: '', order_date: '07 Jul 2022', order_time: '10:15 AM', order_total: '116.50', order_status: Placed, delivery_address: { id: '60', contact_name: 'Parth House', contact_number: '1231231235', state_id: '2', state_name: Maharashtra, city_id: '3', city_name: Mumbai, postcode_id: '5', postcode: '380020', area: 'Parth House', house_no: '153', street: 'Parth House', landmark: 'Parth House landmark', address_type: Home, is_delivery_address: 'no' }, items: [{ order_item_id: '6', quantity: '1', item_id: '5', item_type: books, heading: Test5, mrp: '100.00', sale_price: '90.00', cover_image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/386d1968e9850353b0f2a3a40b3ae716.png', rating: '0.0' }], order_summary: { total_mrp: '100.00', discount_on_sale: '23.50', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '116.50' } } }
            tags:
                - 'Customer Endpoints'
        parameters:
            -
                in: path
                name: order_item_id
                description: ''
                example: distinctio
                required: true
                schema:
                    type: string
    /api/customer/my_digital_coupons:
        post:
            summary: 'My Digital Coupons: Purchased Coupon List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: [{ id: '8', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '04 Jul 2022' }, { id: '14', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '05 Jul 2022' }]
                                    links: { first: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', last: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', prev: '', next: '' }
                                    meta: { current_page: 1, last_page: 1, per_page: 15, total: 5 }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: array, example: [{ id: '8', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '04 Jul 2022' }, { id: '14', title: 'Order #ERER455', image: 'http://localhost/ssgc/public/default_media/order_image.png', action: 'Order ', order_date: '05 Jul 2022' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', last: 'http://localhost/ssgc/public/api/customer/my_orders?page=1', prev: '', next: '' } }
                                    meta: { type: object, example: { current_page: 1, last_page: 1, per_page: 15, total: 5 } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: 'Order Type (Enums : books, e_books, packages, videos, courses, tests)'
                                    example: soluta
                                status:
                                    type: array
                                    description: 'Order Status (Enums : processing,completed)'
                                    example: a
    '/api/customer/my_digital_coupon_details/{order_id}':
        get:
            summary: 'My Digital Coupons: Purchased Coupon Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { order_id: '2', order_display: '', order_date: '07 Jul 2022', order_time: '10:15 AM', order_total: '116.50', order_status: Placed, delivery_address: { id: '60', contact_name: 'Parth House', contact_number: '1231231235', state_id: '2', state_name: Maharashtra, city_id: '3', city_name: Mumbai, postcode_id: '5', postcode: '380020', area: 'Parth House', house_no: '153', street: 'Parth House', landmark: 'Parth House landmark', address_type: Home, is_delivery_address: 'no' }, items: [{ order_item_id: '6', quantity: '1', item_id: '5', item_type: books, heading: Test5, mrp: '100.00', sale_price: '90.00', cover_image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/386d1968e9850353b0f2a3a40b3ae716.png', rating: '0.0' }], order_summary: { total_mrp: '100.00', discount_on_sale: '23.50', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '116.50' } }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { order_id: '2', order_display: '', order_date: '07 Jul 2022', order_time: '10:15 AM', order_total: '116.50', order_status: Placed, delivery_address: { id: '60', contact_name: 'Parth House', contact_number: '1231231235', state_id: '2', state_name: Maharashtra, city_id: '3', city_name: Mumbai, postcode_id: '5', postcode: '380020', area: 'Parth House', house_no: '153', street: 'Parth House', landmark: 'Parth House landmark', address_type: Home, is_delivery_address: 'no' }, items: [{ order_item_id: '6', quantity: '1', item_id: '5', item_type: books, heading: Test5, mrp: '100.00', sale_price: '90.00', cover_image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/386d1968e9850353b0f2a3a40b3ae716.png', rating: '0.0' }], order_summary: { total_mrp: '100.00', discount_on_sale: '23.50', delivery_charges: '40.00', coin_point_discount: '0.00', total_amount: '116.50' } } }
            tags:
                - 'Customer Endpoints'
        parameters:
            -
                in: path
                name: order_id
                description: ''
                example: facilis
                required: true
                schema:
                    type: string
    /api/customer/sale_coupon:
        post:
            summary: 'My Digital Coupons: Sale Coupon'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                qr_id:
                                    type: number
                                    description: 'From available coupons array'
                                    example: 0.894726
                                customer_name:
                                    type: string
                                    description: 'Full name.'
                                    example: John
                                customer_contact:
                                    type: string
                                    description: 'max:10  Mobile Number.'
                                    example: '1234567890'
                                sale_price:
                                    type: number
                                    description: ''
                                    example: 304238.0
                            required:
                                - qr_id
                                - customer_name
                                - customer_contact
                                - sale_price
    /api/customer/my_return/make_my_return_list:
        post:
            summary: 'Return: Make My Return List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                language:
                                    type: string
                                    description: 'Language (hindi,english).'
                                    example: hindi
                                category_id:
                                    type: string
                                    description: 'optional Category_id (category_id or subcategory_id of any level).'
                                    example: '3'
                            required:
                                - language
    /api/customer/my_return/add_to_cart:
        post:
            summary: 'Return: Add to return cart'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"The product is added into the return cart.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order_item_id:
                                    type: string
                                    description: 'id from Make My Return List API .'
                                    example: '1'
                                quantity:
                                    type: string
                                    description: Quantity.
                                    example: '3'
                            required:
                                - order_item_id
                                - quantity
    /api/customer/my_return/update_quantity:
        post:
            summary: 'Return: Update Quantity'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                return_item_id:
                                    type: number
                                    description: ''
                                    example: 562683959.0
                                quantity:
                                    type: number
                                    description: ''
                                    example: 104.390195
                            required:
                                - return_item_id
                                - quantity
    /api/customer/my_return/my_cart:
        get:
            summary: 'Return: My Return Cart'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
    /api/customer/my_return/place_order_return:
        post:
            summary: 'Return: Place Order Return'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Order returned successfully.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                return_items:
                                    type: array
                                    description: 'array of return_item_id from Return: My Return Cart'
                                    example: '[1,2]'
                            required:
                                - return_items
    /api/customer/my_return/return_orders_list:
        post:
            summary: 'Return: Return Product List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                status:
                                    type: array
                                    description: 'enum:return_placed,dispatched,in_review,rejected,accepted'
                                    example: 'return_placed,dispatched,in_review,rejected,accepted'
                            required:
                                - status
    /api/customer/my_return/dispatch_order_return:
        post:
            summary: 'Return: Dispatch Order Return'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order_return_id:
                                    type: string
                                    description: 'order_return_id from Return: Return Product List'
                                    example: '1'
                                courier_name:
                                    type: string
                                    description: 'max:150 Courier service name'
                                    example: loremkaka
                                tracking_number:
                                    type: string
                                    description: 'max:100 Tracking number'
                                    example: '123'
                                receipt_image:
                                    type: string
                                    description: 'mimes:png,jpg,jpeg,svg max:10mb Receipt Image'
                                    example: '1'
                            required:
                                - order_return_id
                                - courier_name
                                - tracking_number
                                - receipt_image
    /api/customer/my_return/order_return_details:
        post:
            summary: 'Return: Order Return Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order_return_id:
                                    type: string
                                    description: 'order_return_id from Return: Return Product List'
                                    example: '1'
                            required:
                                - order_return_id
    /api/customer/wishlist/out_of_stock_wishlist:
        get:
            summary: 'WishList: Out Of Stock Wish List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
    /api/customer/wishlist/retailer_wishlist:
        get:
            summary: 'WishList: Wish List(My Wishlist,Available)'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: 'Wishlist type enum:my_wishlist,available .'
                                    example: my_wishlist
                            required:
                                - type
    /api/customer/wishlist/retailer_dealer_list:
        get:
            summary: 'WishList: User''s Dealer List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
    /api/customer/wishlist/add_to_wishlist:
        post:
            summary: 'WishList: Add to Wish List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"The item is added into the wishlist.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                book_id:
                                    type: string
                                    description: 'Book Id .'
                                    example: '1'
                                'dealers[]':
                                    type: array
                                    description: 'optional from WishList: User''s Dealer List.'
                                    example: '[3,4]'
                                quantity:
                                    type: string
                                    description: Quantity.
                                    example: '3'
                            required:
                                - book_id
                                - quantity
    /api/customer/wishlist/update_quantity:
        post:
            summary: 'WishList: Update Quantity'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"The item quantity is updated.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_list_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                                quantity:
                                    type: number
                                    description: ''
                                    example: 2.0
                            required:
                                - wish_list_id
                                - quantity
    /api/customer/wishlist/remove_from_wishlist:
        post:
            summary: 'WishList: Remove From Wishlist'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"The item is removed from the wishlist.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_list_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                            required:
                                - wish_list_id
    /api/customer/wishlist/wishlist_details:
        post:
            summary: 'WishList: WishList Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_list_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                            required:
                                - wish_list_id
    /api/customer/wishlist/dealer_wishlist_requests:
        post:
            summary: 'WishList: Dealer''s Retailer Wishlist Request'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                search:
                                    type: string
                                    description: 'optional Search Query.'
                                    example: lorem
    /api/customer/wishlist/dealer_wishlist_request_details:
        post:
            summary: 'WishList: Dealer''s Retailer Wishlist Request Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_list_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                            required:
                                - wish_list_id
    /api/customer/wish_return/all_wish_return_list:
        post:
            summary: 'Wish Return: All Wish Return List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                language:
                                    type: string
                                    description: 'Language (hindi,english).'
                                    example: hindi
                                category_id:
                                    type: string
                                    description: 'optional Category_id (category_id or subcategory_id of any level).'
                                    example: '3'
                            required:
                                - language
    /api/customer/wish_return/my_wish_return_list:
        get:
            summary: 'Wish Return: My Wish Return List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
    /api/customer/wish_return/add_to_wish_return:
        post:
            summary: 'Wish Return: Add to Wish Return'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"The item is added into the wish return list.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                book_id:
                                    type: string
                                    description: 'Book Id .'
                                    example: '1'
                                dealer_id:
                                    type: string
                                    description: 'optional from WishList: User''s Dealer List.'
                                    example: '3'
                                description:
                                    type: string
                                    description: 'optional Max:500 Description.'
                                    example: 'lorem ipsum'
                                quantity:
                                    type: string
                                    description: Quantity.
                                    example: '3'
                            required:
                                - book_id
                                - quantity
    /api/customer/wish_return/edit_wish_return_item:
        post:
            summary: 'Wish Return: Edit Wish Return Item'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"The wish return item is updated.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_return_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                                quantity:
                                    type: number
                                    description: ''
                                    example: 2.0
                                description:
                                    type: string
                                    description: 'optional Max:500 Description.'
                                    example: 'lorem ipsum'
                            required:
                                - wish_return_id
                                - quantity
    /api/customer/wish_return/remove_from_wishlist:
        post:
            summary: 'Wish Return: Remove From Wish Return List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"TThe wish return item is deleted.\",\n}"
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_return_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                            required:
                                - wish_return_id
    /api/customer/wish_return/wish_return_details:
        post:
            summary: 'Wish Return: Wish Return Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_return_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                            required:
                                - wish_return_id
    /api/customer/wish_return/dealer_wish_return_requests:
        post:
            summary: 'Wish Return: Dealer''s Retailer Wish Return Request'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                search:
                                    type: string
                                    description: 'optional Search Query.'
                                    example: lorem
    /api/customer/wish_return/dealer_wishlist_request_details:
        post:
            summary: 'Wish Return: Dealer''s Retailer Wish Return Request Details'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: {  }
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: object, example: {  } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                wish_return_id:
                                    type: number
                                    description: ''
                                    example: 1.0
                            required:
                                - wish_return_id
    /api/customer/suggestion_book_list:
        post:
            summary: 'Suggestion: Suggestion Book list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Books available'
                                    data: [{ book_id: '21', name: 'Harry Potter', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740395441227.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '20', name: 'the Bible', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740394854126.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '19', name: CATCH-22, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740393712254.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '18', name: 'THE SOUND AND THE FURY', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740392737976.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '17', name: 'BRAVE NEW WORLD', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740391962670.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '16', name: 'Art of living', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740390975437.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '15', name: Arthashastra, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740389989247.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '14', name: Corporate-Chanakya, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740389076333.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '13', name: 'Half girl friend', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740388208663.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '12', name: Beloved, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740387401019.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '11', name: 'Don Quixote', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740375109461.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '10', name: 'The Great Gatsby', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740374312465.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '9', name: 'To Kill a Mockingbird', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740373723833.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '8', name: atomic-habits, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740372599640.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '7', name: Believe-Yourself, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740371632382.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }]
                                    links: { first: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/api/customer/suggestion_book_list?page=1', last: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/api/customer/suggestion_book_list?page=2', prev: '', next: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/api/customer/suggestion_book_list?page=2' }
                                    meta: { current_page: 1, last_page: 2, per_page: 15, total: 18 }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Books available' }
                                    data: { type: array, example: [{ book_id: '21', name: 'Harry Potter', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740395441227.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '20', name: 'the Bible', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740394854126.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '19', name: CATCH-22, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740393712254.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '18', name: 'THE SOUND AND THE FURY', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740392737976.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '17', name: 'BRAVE NEW WORLD', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740391962670.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '16', name: 'Art of living', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740390975437.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '15', name: Arthashastra, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740389989247.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '14', name: Corporate-Chanakya, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740389076333.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '13', name: 'Half girl friend', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740388208663.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '12', name: Beloved, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740387401019.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '11', name: 'Don Quixote', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740375109461.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '10', name: 'The Great Gatsby', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740374312465.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '9', name: 'To Kill a Mockingbird', sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740373723833.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '8', name: atomic-habits, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740372599640.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }, { book_id: '7', name: Believe-Yourself, sale_price: '', mrp: '500.00', image: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/uploads/media/book_16740371632382.png', quantity: '1', added_to_cart: '0', cart_item_id: '' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/api/customer/suggestion_book_list?page=1', last: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/api/customer/suggestion_book_list?page=2', prev: '', next: 'http://cloud1.kodyinfotech.com:7000/ssgc-bulk-order-web/public/api/customer/suggestion_book_list?page=2' } }
                                    meta: { type: object, example: { current_page: 1, last_page: 2, per_page: 15, total: 18 } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                language:
                                    type: string
                                    description: 'Language (hindi,english).'
                                    example: hindi
                                category_id:
                                    type: string
                                    description: 'optional Category_id (category_id or subcategory_id of any level).'
                                    example: '3'
                            required:
                                - language
            security: []
    /api/customer/add_ssgc_suggestion:
        post:
            summary: 'Suggestion:Ssgc Suggestion add'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Ssgc Suggestion Added'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Ssgc Suggestion Added' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                product_id:
                                    type: string
                                    description: Product_id.
                                    example: '3'
                                description:
                                    type: string
                                    description: Description
                                    example: abc
                                mobile_number:
                                    type: string
                                    description: 'Mobile Number'
                                    example: '8787878787'
                                email:
                                    type: string
                                    description: Email
                                    example: abc_@gamil.com
                            required:
                                - product_id
                                - description
                                - mobile_number
                                - email
            security: []
    /api/customer/add_wish_suggestion:
        post:
            summary: 'Suggestion:Wish Suggestion add'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Wish Suggestion Added'
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Wish Suggestion Added' }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                book_name:
                                    type: string
                                    description: 'Book Name'
                                    example: abc
                                subject:
                                    type: string
                                    description: 'Subject .'
                                    example: sparsh
                                description:
                                    type: string
                                    description: Description
                                    example: abc
                                mobile_number:
                                    type: string
                                    description: 'Mobile Number'
                                    example: '8787878787'
                                email:
                                    type: string
                                    description: Email
                                    example: abc_@gamil.co
                                images:
                                    type: string
                                    description: Images
                                    example: img/pdf
                                pdf:
                                    type: string
                                    description: Pdf
                                    example: pdf
                            required:
                                - book_name
                                - subject
                                - description
                                - mobile_number
                                - email
            security: []
    /api/customer/home/make_my_return:
        get:
            summary: 'Home: Make My Return'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200, error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '0'
                                    status: '201'
                                    message: 'Something went wrong.'
                                    data: []
                                properties:
                                    success: { type: string, example: '0' }
                                    status: { type: string, example: '201' }
                                    message: { type: string, example: 'Something went wrong.' }
                                    data: { type: array, example: [] }
            tags:
                - 'Customer Endpoints'
    /api/customer/coupon_list:
        post:
            summary: 'Coupon: Coupon list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Coupon available'
                                    data: [{ sub_coupon_id: '2', name: 'Course 5/9 Multiple coupon', sale_price: '100.00', mrp: '200.00', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/canada-flag-png-4604_(1)_16746497122843.png', type: courses, expiry_date: '2023-09-29 19:00:00' }, { sub_coupon_id: '1', name: 'Coupon Multi 14', sale_price: '50.00', mrp: '100.00', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/canada-flag-png-4604_-_Copy_16746485149778.png', type: books, expiry_date: '2024-10-31 15:30:00' }]
                                    links: { first: 'http://localhost/ssgc-bulk-order-web/public/api/customer/coupon_list?page=1', last: 'http://localhost/ssgc-bulk-order-web/public/api/customer/coupon_list?page=1', prev: '', next: '' }
                                    meta: { current_page: 1, last_page: 1, per_page: 15, total: 2 }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Coupon available' }
                                    data: { type: array, example: [{ sub_coupon_id: '2', name: 'Course 5/9 Multiple coupon', sale_price: '100.00', mrp: '200.00', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/canada-flag-png-4604_(1)_16746497122843.png', type: courses, expiry_date: '2023-09-29 19:00:00' }, { sub_coupon_id: '1', name: 'Coupon Multi 14', sale_price: '50.00', mrp: '100.00', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/canada-flag-png-4604_-_Copy_16746485149778.png', type: books, expiry_date: '2024-10-31 15:30:00' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/ssgc-bulk-order-web/public/api/customer/coupon_list?page=1', last: 'http://localhost/ssgc-bulk-order-web/public/api/customer/coupon_list?page=1', prev: '', next: '' } }
                                    meta: { type: object, example: { current_page: 1, last_page: 1, per_page: 15, total: 2 } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                category_id:
                                    type: string
                                    description: 'optional Category_id (category_id or subcategory_id of any level).'
                                    example: '3'
            security: []
    /api/customer/coupon_detail:
        post:
            summary: 'Coupon: Coupon Detail'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Coupon Details'
                                    data: { sub_coupon_id: '1', name: 'Railway Discount', sale_price: '10.00', mrp: '20.00', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/image_2021_08_11T13_34_48_563Z_1674641468276.png', type: e_books, expiry_date: '2023-09-29 13:15:00', description: 'meet mehta' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Coupon Details' }
                                    data: { type: object, example: { sub_coupon_id: '1', name: 'Railway Discount', sale_price: '10.00', mrp: '20.00', image: 'http://localhost/ssgc-bulk-order-web/public/uploads/media/image_2021_08_11T13_34_48_563Z_1674641468276.png', type: e_books, expiry_date: '2023-09-29 13:15:00', description: 'meet mehta' } }
            tags:
                - 'Customer Endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                sub_coupon_id:
                                    type: string
                                    description: 'Sub Coupon Id .'
                                    example: '3'
                            required:
                                - sub_coupon_id
            security: []
    '/api/customer/nested_categories/{business_category_id}':
        get:
            summary: 'Nested Categories: List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: [{ category_id: '1', category_name: 'Master 1', sub_cat: [{ category_id: '2', category_name: 'L2 11', sub_cat: [{ category_id: '4', category_name: 'L3 111', sub_cat: [{ category_id: '5', category_name: 'L4 1111', sub_cat: [{ category_id: '7', category_name: 'L5 11111', sub_cat: [{ category_id: '8', category_name: 'L6 111111', sub_cat: [{ category_id: '9', category_name: 'L7 1111111', sub_cat: [] }] }] }] }] }] }, { category_id: '3', category_name: 'L2 12', sub_cat: [] }, { category_id: '33', category_name: NewCategory, sub_cat: [] }, { category_id: '34', category_name: Abc, sub_cat: [] }] }, { category_id: '6', category_name: 'Master 2', sub_cat: [] }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: array, example: [{ category_id: '1', category_name: 'Master 1', sub_cat: [{ category_id: '2', category_name: 'L2 11', sub_cat: [{ category_id: '4', category_name: 'L3 111', sub_cat: [{ category_id: '5', category_name: 'L4 1111', sub_cat: [{ category_id: '7', category_name: 'L5 11111', sub_cat: [{ category_id: '8', category_name: 'L6 111111', sub_cat: [{ category_id: '9', category_name: 'L7 1111111', sub_cat: [] }] }] }] }] }] }, { category_id: '3', category_name: 'L2 12', sub_cat: [] }, { category_id: '33', category_name: NewCategory, sub_cat: [] }, { category_id: '34', category_name: Abc, sub_cat: [] }] }, { category_id: '6', category_name: 'Master 2', sub_cat: [] }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
        parameters:
            -
                in: path
                name: business_category_id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: velit
    /api/customer/nested_categories_return:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Trying to get property ''id'' of non-object'
                                    exception: ErrorException
                                    file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/app/Http/Controllers/Api/Customer/NestedCategoryController.php
                                    line: 239
                                    trace: [{ file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/app/Http/Controllers/Api/Customer/NestedCategoryController.php, line: 239, function: handleError, class: Illuminate\Foundation\Bootstrap\HandleExceptions, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php, line: 1199, function: 'App\Http\Controllers\Api\Customer\{closure}', class: App\Http\Controllers\Api\Customer\NestedCategoryController, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/QueriesRelationships.php, line: 59, function: callScope, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/QueriesRelationships.php, line: 150, function: has, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/app/Http/Controllers/Api/Customer/NestedCategoryController.php, line: 240, function: whereHas, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Controller.php, line: 54, function: nested_categories_return, class: App\Http\Controllers\Api\Customer\NestedCategoryController, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php, line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 262, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 205, function: runController, class: Illuminate\Routing\Route, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 721, function: run, class: Illuminate\Routing\Route, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 52, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php, line: 50, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 723, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 698, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 662, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 651, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 167, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php, line: 31, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php, line: 40, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TrimStrings, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 86, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 52, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php, line: 39, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Http\Middleware\TrustProxies, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 142, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 111, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 653, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Command/Command.php, line: 298, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Application.php, line: 1040, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Application.php, line: 301, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Application.php, line: 171, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 94, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'Trying to get property ''id'' of non-object' }
                                    exception: { type: string, example: ErrorException }
                                    file: { type: string, example: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/app/Http/Controllers/Api/Customer/NestedCategoryController.php }
                                    line: { type: integer, example: 239 }
                                    trace: { type: array, example: [{ file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/app/Http/Controllers/Api/Customer/NestedCategoryController.php, line: 239, function: handleError, class: Illuminate\Foundation\Bootstrap\HandleExceptions, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php, line: 1199, function: 'App\Http\Controllers\Api\Customer\{closure}', class: App\Http\Controllers\Api\Customer\NestedCategoryController, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/QueriesRelationships.php, line: 59, function: callScope, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/QueriesRelationships.php, line: 150, function: has, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/app/Http/Controllers/Api/Customer/NestedCategoryController.php, line: 240, function: whereHas, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Controller.php, line: 54, function: nested_categories_return, class: App\Http\Controllers\Api\Customer\NestedCategoryController, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php, line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 262, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Route.php, line: 205, function: runController, class: Illuminate\Routing\Route, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 721, function: run, class: Illuminate\Routing\Route, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 52, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php, line: 50, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php, line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 723, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 698, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 662, function: runRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Routing/Router.php, line: 651, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 167, function: dispatch, class: Illuminate\Routing\Router, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php, line: 31, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php, line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php, line: 40, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TrimStrings, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php, line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php, line: 86, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/fruitcake/laravel-cors/src/HandleCors.php, line: 52, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php, line: 39, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 167, function: handle, class: Illuminate\Http\Middleware\TrustProxies, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php, line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 142, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php, line: 111, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php, line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Extracting/Generator.php, line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php, line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/Util.php, line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php, line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Container/Container.php, line: 653, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 136, function: call, class: Illuminate\Container\Container, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Command/Command.php, line: 298, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Console/Command.php, line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Application.php, line: 1040, function: run, class: Illuminate\Console\Command, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Application.php, line: 301, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/symfony/console/Application.php, line: 171, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Console/Application.php, line: 94, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php, line: 129, function: run, class: Illuminate\Console\Application, type: '->' }, { file: /home/1199381.cloudwaysapps.com/hzmfqvzptm/public_html/artisan, line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/business_categories:
        get:
            summary: 'Home: Business Categories'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: [{ id: '1', name: Books, type: books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/0bc1554ec2c118bff175ab17e332c6e0.png' }, { id: '2', name: 'E- Books', type: e_books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/84a4a640eff66b428b089c933a0edd05.png' }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: array, example: [{ id: '1', name: Books, type: books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/0bc1554ec2c118bff175ab17e332c6e0.png' }, { id: '2', name: 'E- Books', type: e_books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/84a4a640eff66b428b089c933a0edd05.png' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/dealers:
        get:
            summary: 'Master: Dealers List'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: [{ id: '1', name: Books, type: books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/0bc1554ec2c118bff175ab17e332c6e0.png' }, { id: '2', name: 'E- Books', type: e_books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/84a4a640eff66b428b089c933a0edd05.png' }]
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: array, example: [{ id: '1', name: Books, type: books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/0bc1554ec2c118bff175ab17e332c6e0.png' }, { id: '2', name: 'E- Books', type: e_books, url: '', image: 'http://cloud1.kodyinfotech.com:7000/ssgc/public/uploads/media/84a4a640eff66b428b089c933a0edd05.png' }], items: { type: object } }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/contact_us_info:
        get:
            summary: 'Home: Contact Us Info'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"success\": \"1\",\n\"status\": \"200\",\n\"message\": \"Data Found Successfully\",\n\"data\": {\n\"contact_email\": \"1.0.0\",\n\"contact_mobile\": \"soft\",\n}\n}"
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/bulk_coupons:
        get:
            summary: 'For Backend Use'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: 'Trying to access array offset on value of type null'
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/update_coupon:
        post:
            summary: 'For Backend Use Only'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Customer Endpoints'
            security: []
    /api/customer/get_social_media_link:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept-Language
                    description: ''
                    example: en
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: '1'
                                    status: '200'
                                    message: 'Data Found Successfully'
                                    data: { facebook_url: 'http://facebook.com', twitter_url: 'https://twitter.com/', instagram_url: 'https://www.instagram.com/', telegram_url: 'https://web.telegram.org/k/', whatsapp_url: 'https://web.whatsapp.com/' }
                                properties:
                                    success: { type: string, example: '1' }
                                    status: { type: string, example: '200' }
                                    message: { type: string, example: 'Data Found Successfully' }
                                    data: { type: object, example: { facebook_url: 'http://facebook.com', twitter_url: 'https://twitter.com/', instagram_url: 'https://www.instagram.com/', telegram_url: 'https://web.telegram.org/k/', whatsapp_url: 'https://web.whatsapp.com/' } }
            tags:
                - 'Customer Endpoints'
            security: []
